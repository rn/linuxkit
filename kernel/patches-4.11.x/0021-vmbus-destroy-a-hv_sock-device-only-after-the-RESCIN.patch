From 433e6492a6249ea74a61ab41330e3c17d1c051fa Mon Sep 17 00:00:00 2001
From: Dexuan Cui <decui@microsoft.com>
Date: Tue, 29 Aug 2017 14:23:39 -0700
Subject: [PATCH 21/21] vmbus: destroy a hv_sock device only after the
 RESCIND_OFFER is received

It looks the host/guest interactive protocol for hv_sock has been changed
since Windows Server TP5, and now Linux VM should only destroy the channel
after the host agrees: the host always sends a RESCIND_OFFER message to the
VM for this).

Without the patch, the host's recv() can return -1 when Linux closes a
hv_sock connection, and as a result, the host app can potentially lose the
last portion of the data transferred through the hv_sock connection.

Signed-off-by: Dexuan Cui <decui@microsoft.com>
Origin: git@github.com:dcui/linux.git
(cherry picked from commit e37da6e7a52ea60825ca676e0c59fe5e4ecd89d6)
---
 drivers/hv/channel_mgmt.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/hv/channel_mgmt.c b/drivers/hv/channel_mgmt.c
index 52c7e811738f..a64819c0d4d9 100644
--- a/drivers/hv/channel_mgmt.c
+++ b/drivers/hv/channel_mgmt.c
@@ -905,6 +905,9 @@ static void vmbus_onoffer_rescind(struct vmbus_channel_message_header *hdr)
 	if (channel->device_obj) {
 		if (channel->chn_rescind_callback) {
 			channel->chn_rescind_callback(channel);
+
+			vmbus_device_unregister(channel->device_obj);
+
 			return;
 		}
 		/*
@@ -955,9 +958,6 @@ void vmbus_hvsock_device_unregister(struct vmbus_channel *channel)
 		      vmbus_connection.work_queue_rescind, &work);
 	flush_work(&work);
 
-	channel->rescind = true;
-	vmbus_device_unregister(channel->device_obj);
-
 	/* Unblock the rescind handling */
 	atomic_dec(&vmbus_connection.offer_in_progress);
 }
-- 
2.11.1

